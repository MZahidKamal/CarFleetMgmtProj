# Generated by Django 5.0.4 on 2024-05-13 23:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cardealer', '0001_initial'),
        ('customer', '0001_initial'),
        ('deliveryagent', '0001_initial'),
        ('manufacturer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_role', models.CharField(choices=[('MANUFACTURER', 'Manufacturer'), ('CAR DEALER', 'Car Dealer'), ('DELIVERY AGENT', 'Delivery Agent'), ('CUSTOMER', 'Customer')], max_length=15, verbose_name='User Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Custom User',
                'verbose_name_plural': 'Custom Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CarDealerAccountModel',
            fields=[
                ('customusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('car_dealer_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cardealer.cardealermodel', verbose_name='Car Dealer Info')),
            ],
            options={
                'verbose_name': 'Car Dealer Account',
                'verbose_name_plural': 'Car Dealers Accounts',
            },
            bases=('user.customusermodel',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAccountModel',
            fields=[
                ('customusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('customer_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customer.customermodel', verbose_name='Customer Info')),
            ],
            options={
                'verbose_name': 'Customer Account',
                'verbose_name_plural': 'Customer Accounts',
            },
            bases=('user.customusermodel',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAgentAccountModel',
            fields=[
                ('customusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('delivery_agent_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='deliveryagent.deliveryagentmodel', verbose_name='Delivery Agent Info')),
            ],
            options={
                'verbose_name': 'Delivery Agent Account',
                'verbose_name_plural': 'Delivery Agents Accounts',
            },
            bases=('user.customusermodel',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ManufacturerAccountModel',
            fields=[
                ('customusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('manufacturer_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='manufacturer.manufacturermodel', verbose_name='Manufacturer Info')),
            ],
            options={
                'verbose_name': 'Manufacturer Account',
                'verbose_name_plural': 'Manufacturer Accounts',
            },
            bases=('user.customusermodel',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
